{"remainingRequest":"/home/ar4z/Projects/cafe-client/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ar4z/Projects/cafe-client/vue/src/views/PriceCalculate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ar4z/Projects/cafe-client/vue/src/views/PriceCalculate.vue","mtime":1556847203214},{"path":"/home/ar4z/Projects/cafe-client/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe-client/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe-client/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe-client/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"PriceCalculate\",\n  data: () => {\n    return {\n      lotes: [\n        {\n          num: 1,\n          heightTreeAverage: \"\",\n          coffeeAmount: \"\",\n          coffeeAmountKgs: \"\",\n          distanceGreaterToThousand: false,\n          minPriceKg: \"\",\n          maxPriceKg: \"\"\n        }\n      ],\n      piso: \"\",\n      priceAverage: \"\",\n      showResult: false,\n      result: \"\",\n      minPriceWeek: 0,\n      maxPriceWeek: 0,\n      showPriceWeek: false\n    };\n  },\n  methods: {\n    addLote() {\n      this.showResult = false;\n      this.result = \"\";\n      this.lotes.push({\n        num: this.lotes[this.lotes.length - 1][\"num\"] + 1,\n        heightTreeAverage: \"\",\n        coffeeAmount: \"\",\n        coffeeAmountKgs: \"\",\n        distanceGreaterToThousand: false,\n        minPriceKg: \"\",\n        maxPriceKg: \"\"\n      });\n    },\n    removeLote(num) {\n      this.showResult = false;\n      this.result = \"\";\n      this.lotes = this.lotes.filter(item => item.num != num);\n    },\n    clean() {\n      this.lotes = [\n        {\n          num: 1,\n          heightTreeAverage: \"\",\n          coffeeAmount: \"\",\n          coffeeAmountKgs: \"\",\n          distanceGreaterToThousand: false,\n          minPriceKg: \"\",\n          maxPriceKg: \"\"\n        }\n      ];\n      this.priceAverage = \"\";\n      this.showResult = false;\n      this.result = \"\";\n      this.piso = \"\";\n      this.priceWeek = 0;\n      this.showPriceWeek = false;\n    },\n    generateRandomInteger(min, max) {\n      return Math.floor(min + Math.random() * (max + 1 - min));\n    },\n    calculatePricePerKg() {\n      let increaseForCoffeeAmount = [[60, 120], [40, 50], [10, 20], [0, 0]];\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          this.lotes.forEach(lote => {\n            let minPrice = Number(this.priceAverage);\n            let maxPrice = Number(this.priceAverage);\n            if (Number(lote.heightTreeAverage.replace(\",\", \".\")) >= 1.7) {\n              minPrice += Number(this.priceAverage) * 0.1;\n              maxPrice += Number(this.priceAverage) * 0.1;\n            }\n\n            minPrice +=\n              Number(this.piso) *\n              (increaseForCoffeeAmount[lote.coffeeAmount][0] / 100);\n\n            maxPrice +=\n              Number(this.piso) *\n              (increaseForCoffeeAmount[lote.coffeeAmount][1] / 100);\n\n            if (lote.distanceGreaterToThousand) {\n              minPrice += 100;\n              maxPrice += 100;\n            }\n            lote.minPriceKg = minPrice;\n            lote.maxPriceKg = maxPrice;\n          });\n          this.showResult = true;\n        }\n      });\n    },\n    calculatePricePerWeek() {\n      this.minPriceWeek = 0;\n      this.maxPriceWeek = 0;\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          this.lotes.forEach(lote => {\n            this.minPriceWeek +=\n              Number(lote.minPriceKg) * Number(lote.coffeeAmountKgs);\n            this.maxPriceWeek +=\n              Number(lote.maxPriceKg) * Number(lote.coffeeAmountKgs);\n          });\n          this.showPriceWeek = true;\n        }\n      });\n    }\n  }\n};\n",{"version":3,"sources":["PriceCalculate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"PriceCalculate.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container grid-list-md text-xs-center>\n    <v-layout row wrap v-if=\"showResult\">\n      <v-flex xs12>\n        <v-card color=\"white\">\n          <v-card-title>\n            <span class=\"title\">Calcule el costo de una semana de recolección</span>\n          </v-card-title>\n          <v-container fill-height>\n            <v-form>\n              <div v-for=\"lote in lotes\" :key=\"lote.num\">\n                <v-layout\n                  :column=\"$vuetify.breakpoint.mdAndDown\"\n                  :row=\"!$vuetify.breakpoint.mdAndDown\"\n                  align-center\n                >\n                  <v-flex xs12 md4>\n                    <p class=\"title text-md-center\">{{`Lote ${lote.num}`}}</p>\n                  </v-flex>\n                  <v-flex xs12 md12>\n                    <v-text-field\n                      label=\"Precio mínimo por kg\"\n                      v-model=\"lotes[lotes.indexOf(lote)]['minPriceKg']\"\n                      disabled\n                      readonly\n                    ></v-text-field>\n                  </v-flex>\n                  <v-flex xs12 md12>\n                    <v-text-field\n                      label=\"Precio máximo por kg\"\n                      v-model=\"lotes[lotes.indexOf(lote)]['maxPriceKg']\"\n                      disabled\n                      readonly\n                    ></v-text-field>\n                  </v-flex>\n                  <v-flex xs12 md12>\n                    <v-text-field\n                      label=\"Cantidad de café maduro\"\n                      v-model=\"lotes[lotes.indexOf(lote)]['coffeeAmountKgs']\"\n                      v-validate.initi=\"'numeric|required'\"\n                      data-vv-as=\"Cantidad de café maduro\"\n                      :name=\"'lote'+lote.num\"\n                      :error-messages=\"errors.collect('lote'+lote.num)\"\n                      required\n                    ></v-text-field>\n                  </v-flex>\n                </v-layout>\n              </div>\n              <v-layout\n                :column=\"$vuetify.breakpoint.mdAndDown\"\n                :row=\"!$vuetify.breakpoint.mdAndDown\"\n              >\n                <v-flex xs12 md12>\n                  <v-btn color=\"success\" v-on:click.native=\"calculatePricePerWeek\">Calcular</v-btn>\n                  <v-btn color=\"light\" v-on:click.native=\"clean\">Limpiar</v-btn>\n                </v-flex>\n                <v-flex xs12 md12 v-if=\"showPriceWeek\">\n                  <span>El costo mínimo semanal es {{ Number(minPriceWeek) | currency}}</span>\n                  <br/>\n                  <span>El costo máximo semanal es {{ Number(maxPriceWeek) | currency}}</span>\n                </v-flex>\n              </v-layout>\n            </v-form>\n          </v-container>\n        </v-card>\n      </v-flex>\n    </v-layout>\n    <v-layout row wrap v-if=\"!showResult\">\n      <v-flex xs12>\n        <v-card color=\"white\">\n          <v-card-title>\n            <span class=\"title\">Ingrese la información de los lotes</span>\n          </v-card-title>\n          <v-container>\n            <v-form>\n              <div v-for=\"lote in lotes\" :key=\"lote.num\">\n                <v-layout\n                  :column=\"$vuetify.breakpoint.mdAndDown\"\n                  :row=\"!$vuetify.breakpoint.mdAndDown\"\n                >\n                  <v-flex xs12 md4>\n                    <v-text-field\n                      label=\"Altura promedio de los arboles en metros\"\n                      v-model=\"lotes[lotes.indexOf(lote)]['heightTreeAverage']\"\n                      v-validate=\"{ required: true, regex:/^([0-9]+|[0-9]+,[0-9]{0,2}?)$/ }\"\n                      data-vv-as=\"Altura promedio de los arboles\"\n                      :name=\"'lote'+lote.num\"\n                      :error-messages=\"errors.collect('lote'+lote.num)\"\n                    ></v-text-field>\n                  </v-flex>\n                  <v-flex xs12 md4>\n                    <v-radio-group\n                      label=\"Cantidad de café maduro\"\n                      v-validate=\"'required'\"\n                      :name=\"'coffeeAmount'+lote.num\"\n                      data-vv-as=\"Cantidad de café maduro\"\n                      v-model=\"lotes[lotes.indexOf(lote)]['coffeeAmount']\"\n                      :error-messages=\"errors.collect('coffeeAmount'+lote.num)\"\n                    >\n                      <v-radio label=\"Buena\" :value=\"3\"></v-radio>\n                      <v-radio label=\"Regular\" :value=\"2\"></v-radio>\n                      <v-radio label=\"Mala\" :value=\"1\"></v-radio>\n                      <v-radio label=\"Muy mala\" :value=\"0\"></v-radio>\n                    </v-radio-group>\n                  </v-flex>\n                  <v-flex xs12 md4>\n                    <v-checkbox\n                      v-model=\"lote.distanceGreaterToThousand\"\n                      label=\"Distancia del lote al centro de acopio mayor a 1000\"\n                    />\n                  </v-flex>\n                  <v-flex x1 class=\"pt-3\">\n                    <v-btn\n                      v-if=\"lote.num != 1\"\n                      color=\"error\"\n                      v-on:click.native=\"() => removeLote(lote.num)\"\n                    >\n                      <v-icon dark>delete</v-icon>\n                    </v-btn>\n                  </v-flex>\n                </v-layout>\n              </div>\n\n              <v-layout\n                :column=\"$vuetify.breakpoint.mdAndDown\"\n                :row=\"!$vuetify.breakpoint.mdAndDown\"\n              >\n                <v-flex xs12 md4>\n                  <v-btn color=\"warning\" v-on:click.native=\"addLote\">\n                    Añadir lote\n                    <v-icon dark right>add</v-icon>\n                  </v-btn>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                :column=\"$vuetify.breakpoint.mdAndDown\"\n                :row=\"!$vuetify.breakpoint.mdAndDown\"\n              >\n                <v-flex xs12 md4>\n                  <v-text-field\n                    label=\"Precio promedio que las fincas vecinas pagan por un kg recolectado\"\n                    v-model=\"priceAverage\"\n                    v-validate.initi=\"'numeric|required'\"\n                    data-vv-as=\"Precio promedio que las fincas vecinas pagan por un kg recolectado\"\n                    name=\"priceAverage\"\n                    :error-messages=\"errors.collect('priceAverage')\"\n                    required\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                :column=\"$vuetify.breakpoint.mdAndDown\"\n                :row=\"!$vuetify.breakpoint.mdAndDown\"\n              >\n                <v-flex xs12 md4>\n                  <v-text-field\n                    label=\"Piso\"\n                    v-model=\"piso\"\n                    v-validate.initi=\"'numeric|required'\"\n                    data-vv-as=\"Piso\"\n                    name=\"piso\"\n                    :error-messages=\"errors.collect('piso')\"\n                    required\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n              <v-layout\n                :column=\"$vuetify.breakpoint.mdAndDown\"\n                :row=\"!$vuetify.breakpoint.mdAndDown\"\n              >\n                <v-flex xs12 md12>\n                  <v-btn color=\"success\" v-on:click.native=\"calculatePricePerKg\">Calcular</v-btn>\n                  <v-btn color=\"light\" v-on:click.native=\"clean\">Limpiar</v-btn>\n                </v-flex>\n              </v-layout>\n            </v-form>\n          </v-container>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n<script>\nexport default {\n  name: \"PriceCalculate\",\n  data: () => {\n    return {\n      lotes: [\n        {\n          num: 1,\n          heightTreeAverage: \"\",\n          coffeeAmount: \"\",\n          coffeeAmountKgs: \"\",\n          distanceGreaterToThousand: false,\n          minPriceKg: \"\",\n          maxPriceKg: \"\"\n        }\n      ],\n      piso: \"\",\n      priceAverage: \"\",\n      showResult: false,\n      result: \"\",\n      minPriceWeek: 0,\n      maxPriceWeek: 0,\n      showPriceWeek: false\n    };\n  },\n  methods: {\n    addLote() {\n      this.showResult = false;\n      this.result = \"\";\n      this.lotes.push({\n        num: this.lotes[this.lotes.length - 1][\"num\"] + 1,\n        heightTreeAverage: \"\",\n        coffeeAmount: \"\",\n        coffeeAmountKgs: \"\",\n        distanceGreaterToThousand: false,\n        minPriceKg: \"\",\n        maxPriceKg: \"\"\n      });\n    },\n    removeLote(num) {\n      this.showResult = false;\n      this.result = \"\";\n      this.lotes = this.lotes.filter(item => item.num != num);\n    },\n    clean() {\n      this.lotes = [\n        {\n          num: 1,\n          heightTreeAverage: \"\",\n          coffeeAmount: \"\",\n          coffeeAmountKgs: \"\",\n          distanceGreaterToThousand: false,\n          minPriceKg: \"\",\n          maxPriceKg: \"\"\n        }\n      ];\n      this.priceAverage = \"\";\n      this.showResult = false;\n      this.result = \"\";\n      this.piso = \"\";\n      this.priceWeek = 0;\n      this.showPriceWeek = false;\n    },\n    generateRandomInteger(min, max) {\n      return Math.floor(min + Math.random() * (max + 1 - min));\n    },\n    calculatePricePerKg() {\n      let increaseForCoffeeAmount = [[60, 120], [40, 50], [10, 20], [0, 0]];\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          this.lotes.forEach(lote => {\n            let minPrice = Number(this.priceAverage);\n            let maxPrice = Number(this.priceAverage);\n            if (Number(lote.heightTreeAverage.replace(\",\", \".\")) >= 1.7) {\n              minPrice += Number(this.priceAverage) * 0.1;\n              maxPrice += Number(this.priceAverage) * 0.1;\n            }\n\n            minPrice +=\n              Number(this.piso) *\n              (increaseForCoffeeAmount[lote.coffeeAmount][0] / 100);\n\n            maxPrice +=\n              Number(this.piso) *\n              (increaseForCoffeeAmount[lote.coffeeAmount][1] / 100);\n\n            if (lote.distanceGreaterToThousand) {\n              minPrice += 100;\n              maxPrice += 100;\n            }\n            lote.minPriceKg = minPrice;\n            lote.maxPriceKg = maxPrice;\n          });\n          this.showResult = true;\n        }\n      });\n    },\n    calculatePricePerWeek() {\n      this.minPriceWeek = 0;\n      this.maxPriceWeek = 0;\n      this.$validator.validate().then(valid => {\n        if (valid) {\n          this.lotes.forEach(lote => {\n            this.minPriceWeek +=\n              Number(lote.minPriceKg) * Number(lote.coffeeAmountKgs);\n            this.maxPriceWeek +=\n              Number(lote.maxPriceKg) * Number(lote.coffeeAmountKgs);\n          });\n          this.showPriceWeek = true;\n        }\n      });\n    }\n  }\n};\n</script>\n"]}]}