{"remainingRequest":"/home/ar4z/Projects/cafe/ui/cafe/node_modules/babel-loader/lib/index.js!/home/ar4z/Projects/cafe/ui/cafe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ar4z/Projects/cafe/ui/cafe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ar4z/Projects/cafe/ui/cafe/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ar4z/Projects/cafe/ui/cafe/src/components/HelloWorld.vue","mtime":1555597577936},{"path":"/home/ar4z/Projects/cafe/ui/cafe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe/ui/cafe/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe/ui/cafe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ar4z/Projects/cafe/ui/cafe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Array$from from \"/home/ar4z/Projects/cafe/ui/cafe/node_modules/@babel/runtime-corejs2/core-js/array/from\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ar4z/Projects/cafe/ui/cafe/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"/home/ar4z/Projects/cafe/ui/cafe/node_modules/@babel/runtime-corejs2/core-js/promise\";\n\n//\n//\n//\nvar exhale = function exhale(ms) {\n  return new _Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nexport default {\n  data: function data() {\n    return {\n      checking: false,\n      heartbeats: []\n    };\n  },\n  computed: {\n    avg: function avg() {\n      var sum = this.heartbeats.reduce(function (acc, cur) {\n        return acc + cur;\n      }, 0);\n      var length = this.heartbeats.length;\n      if (!sum && !length) return 0;\n      return Math.ceil(sum / length);\n    }\n  },\n  created: function created() {\n    this.takePulse(false);\n  },\n  methods: {\n    heartbeat: function heartbeat() {\n      return Math.ceil(Math.random() * (120 - 80) + 80);\n    },\n    takePulse: function () {\n      var _takePulse = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var inhale,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                inhale = _args.length > 0 && _args[0] !== undefined ? _args[0] : true;\n                this.checking = true;\n                _context.t0 = inhale;\n\n                if (!_context.t0) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 6;\n                return exhale(1000);\n\n              case 6:\n                this.heartbeats = _Array$from({\n                  length: 20\n                }, this.heartbeat);\n                this.checking = false;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function takePulse() {\n        return _takePulse.apply(this, arguments);\n      }\n\n      return takePulse;\n    }()\n  }\n};",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;AAIA,IAAA,MAAA,GAAA,SAAA,MAAA,CAAA,EAAA;AAAA,SACA,aAAA,UAAA,OAAA;AAAA,WAAA,UAAA,CAAA,OAAA,EAAA,EAAA,CAAA;AAAA,GAAA,CADA;AAAA,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAAA,GADA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,UAAA,GAAA,GAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,GAAA,EAAA,GAAA;AAAA,eAAA,GAAA,GAAA,GAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA;AACA,UAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,OAAA,CAAA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,MAAA,CAAA;AACA;AANA,GALA;AAaA,EAAA,OAbA,qBAaA;AACA,SAAA,SAAA,CAAA,KAAA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,MAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,KAHA;AAIA,IAAA,SAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,gBAAA,MAJA,2DAIA,IAJA;AAKA,qBAAA,QAAA,GAAA,IAAA;AALA,8BAMA,MANA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMA,MAAA,CAAA,IAAA,CANA;;AAAA;AAOA,qBAAA,UAAA,GAAA,YAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,iBAAA,EAAA,KAAA,SAAA,CAAA;AACA,qBAAA,QAAA,GAAA,KAAA;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhBA,CAAA","sourcesContent":["<template>\n  \n</template>\n<script>\n  const exhale = ms =>\n    new Promise(resolve => setTimeout(resolve, ms))\n  export default {\n    data: () => ({\n      checking: false,\n      heartbeats: []\n    }),\n    computed: {\n      avg () {\n        const sum = this.heartbeats.reduce((acc, cur) => acc + cur, 0)\n        const length = this.heartbeats.length\n        if (!sum && !length) return 0\n        return Math.ceil(sum / length)\n      }\n    },\n    created () {\n      this.takePulse(false)\n    },\n    methods: {\n      heartbeat () {\n        return Math.ceil(Math.random() * (120 - 80) + 80)\n      },\n      async takePulse (inhale = true) {\n        this.checking = true\n        inhale && await exhale(1000)\n        this.heartbeats = Array.from({ length: 20 }, this.heartbeat)\n        this.checking = false\n      }\n    }\n  }\n</script>"],"sourceRoot":"src/components"}]}